use_r("utility_fns_combining_raw_dfs")
library(devtools)
library(roxygen2)
use_r("utility_fns_combining_raw_dfs")
?load_all
use_r("utility_fns_prep_dfs")
use_r("get_SMRU_files")
use_r("compile_datasets")
use_r("process_tracks")
load_all()
?get_SMRU_files()
check()
load_all()
check()
library(MASS)
install.packages("MASS")
install.packages("MASS")
install.packages("usethis")
usethis::edit_r_profile()
# add the following text or replace existing repos option
options(repos = c(ianjonsen = 'https://ianjonsen.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
install.packages("aniMotum")
install.packages("aniMotum")
install.packages("MASS")
check()
library(devtools);library(roxygen2)
check()
library(aniMotum)
remove.packages("MASS")
install.packages("MASS")
install.packages("MASS")
library(devtools);library(roxygen2)
check()
load_all()
check()
library(MASS)
.libPaths()
remove.packages("MASS")
install.packages("MASS")
library(devtools);library(roxygen2)
check()
.libPaths()
install.packages("MASS")
library(devtools);library(roxygen2)
check()
library(MASS)
library(MASS)
check()
check()
library(devtools);library(roxygen2)
check()
.Library
.libPaths()
?devtools::check
remove.packages("MASS")
.Library
.libPaths()
fs::dir_ls(.Library)
library(devtools);library(roxygen2)
load_all()
check()
library(MASS)
check()
rcmdcheck::rcmdcheck()
install.packages("devtools")
install.packages("devtools")
library(devtools);library(roxygen2)
check()
.Library
?check
devtools::check()
load_all()
devtools::check()
.libPaths
.libPaths()
.Library
renv::activate()
vignette("renv")
.Library
.libPaths()
fs::dir_ls(.Library)
library(usethis)
library(renv)
install("devtools")
?install
to_install <- c("tidyverse",
"MASS",
"aniMotum",
"bsam",
"geosphere",
"viridis",
"mapdata",
"maps",
"maptools",
"rnaturalearth",
"ggspatial",
"sf",
"fs",
"trip",
"here",
"data.table",
"lubridate",
"future.apply",
"curl",
"RODBC",
"tidyverse",
"fs",
"rSRDL",
"future.apply",
"data.table",
"tidyverse",
"httr",
"fs",
"data.table",
"tidyverse",
"fs",
"data.table",
"curl",
"RODBC",
"tidyverse",
"fs",
"rSRDL",
"future.apply",
"data.table")
to_install <- unique(to_install)
install(to_install)
to_install2 <- to_install[to_install != "aniMotum"]
install(to_install2)
install.packages("maptools", repos = "https://packagemanager.posit.co/cran/2023-10-13")
to_install2 <- to_install[to_install != c("aniMotum", "maptools")]
to_install2 <- to_install[!(to_install %in% c("aniMotum", "maptools"))]
install(to_install2)
install("embiuw/rSRDL")
devtools::install_github("embiuw/rSRDL")
library(rSRDL)
to_install2 <- to_install[!(to_install %in% c("aniMotum", "maptools", "rSRDL"))]
install(to_install2)
install.packages("aniMotum",
repos = c("https://cloud.r-project.org",
"https://ianjonsen.r-universe.dev"),
dependencies = TRUE)
renv::status()
renv::snapshot()
install(roxygen2)
install("roxygen2")
library(devtools);library(roxygen2)
load_all()
check()
library(MASS)
.Library
dir_ls(.Library)
.libPaths()
dir_ls(.libPaths()[1])
usethis::use_package(to_install)
cat(to_install, collapse = ",")
cat(to_install, sep = ",")
cat(to_install, sep = '", "')
usethis::use_package("tidyverse", "MASS", "aniMotum", "bsam", "geosphere", "viridis", "mapdata", "maps", "maptools", "rnaturalearth", "ggspatial", "sf", "fs", "trip", "here", "data.table", "lubridate", "future.apply", "curl", "RODBC", "rSRDL", "httr")
lapply(to_install, usethis::use_package)
lapply(to_install[2:length(to_install)], usethis::use_package)
check()
load_all()
check()
load_all()
check()
install("rsconnect")
install.packages("rsconnect")
rsconnect::appDependencies()
rsconnect::appDependencies("R/")
dependencies()
depPacks <- dependencies()
View(depPacks)
depPacks <- dependencies()
View(depPacks)
depPacks <- dependencies()
View(depPacks)
usethis::use_package("dplyr", "aniMotum", "renv")
usethis::use_package("dplyr")
usethis::use_package("aniMotum")
usethis::use_package("renv")
load_all()
check()
View(depPacks)
install()
library(devtools);library(roxygen2)
load_all()
document()
document()
load_all()
document()
pkgload::dev_help('compile_sum')
document()
pkgload::dev_help('compile_sum')
pkgload::dev_help('get_SMRU_files')
check()
load_all
load_all()
check()
load_all()
check()
load_all()
check()
